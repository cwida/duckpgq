# name: test/sql/sqlpgq/optional_match.test
# group: [duckpgq]

statement ok
pragma enable_verification

require duckpgq

statement ok
CREATE TABLE Student(id BIGINT, name VARCHAR);INSERT INTO Student VALUES (0, 'Daniel'), (1, 'Tavneet'), (2, 'Gabor'), (3, 'Peter'), (4, 'David');

statement ok
CREATE TABLE know(src BIGINT, dst BIGINT, createDate BIGINT);INSERT INTO know VALUES (0,1, 10), (0,2, 11), (0,3, 12), (3,0, 13), (1,2, 14), (1,3, 15), (2,3, 16), (4,3, 17), (3, 4, 18);

statement ok
CREATE TABLE School(name VARCHAR, Id BIGINT, Kind VARCHAR);INSERT INTO School VALUES ('VU', 0, 'University'), ('UVA', 1, 'University');

statement ok
CREATE TABLE StudyAt(personId BIGINT, schoolId BIGINT);INSERT INTO StudyAt VALUES (0, 0), (1, 0), (2, 1), (3, 1);

statement ok
-CREATE PROPERTY GRAPH pg
VERTEX TABLES (
    Student, School
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id ),
    studyAt SOURCE KEY ( personId ) REFERENCES Student ( id )
            DESTINATION KEY ( SchoolId ) REFERENCES School ( id )
    );

query II
-SELECT study.name, study.school
FROM GRAPH_TABLE (pg
    MATCH
    (a:Student)-[s:StudyAt]->?(b:School)
    COLUMNS (a.name as name, b.name as school)
    ) study;
----
Daniel	VU
Tavneet	VU
Gabor	UVA
Peter	UVA
David	NULL

query III
-FROM GRAPH_TABLE (pg
    MATCH
    (b:Student)-[k:know]->?(a:Student)-[s:studyAt]->(c:School)
    COLUMNS (b.name, a.name, c.name)
    );
----
Daniel	Peter	UVA
Tavneet	Peter	UVA
Gabor	Peter	UVA
Peter	Daniel	VU
David	Peter	UVA
Daniel	Gabor	UVA
Tavneet	Gabor	UVA
Daniel	Tavneet	VU

query III
-FROM GRAPH_TABLE (pg
    MATCH
    (b:Student)-[k:know]->(a:Student),
    (a:Student)-[s:studyAt]->?(c:School)
    COLUMNS (b.name, a.name, c.name)
    );
----
Daniel	Tavneet	VU
Daniel	Gabor	UVA
Daniel	Peter	UVA
Peter	Daniel	VU
Tavneet	Gabor	UVA
Tavneet	Peter	UVA
Gabor	Peter	UVA
David	Peter	UVA
Peter	David	NULL

statement ok
import database '~/git/duckpgq-experiments/data/SNB1-projected|';

statement ok
-CREATE PROPERTY GRAPH snb_projected
VERTEX TABLES (
    Forum, Message IN Subcategory(Comment, Post),
    Organisation IN Subcategory(University, Company),
    Person, Place IN Subcategory(Continent, Country, City),
    Tag, TagClass
    )
EDGE TABLES (
    Comment_hasCreator_Person   SOURCE KEY (CommentId) REFERENCES Message (id)
                            DESTINATION KEY (PersonId) REFERENCES Person (id)
                            LABEL Comment_hasCreator,
    Comment_hasTag_Tag      SOURCE KEY (CommentId) REFERENCES Message (id)
                            DESTINATION KEY (TagId) REFERENCES Tag (id)
                            LABEL Comment_hasTag,
    Comment_isLocatedIn_Country     SOURCE KEY (CommentId) REFERENCES Message (id)
                            DESTINATION KEY (CountryId) REFERENCES Tag (id)
                            LABEL Comment_isLocatedIn,
    Comment_replyOf_Comment SOURCE KEY (Comment1Id) REFERENCES Message (id)
                            DESTINATION KEY (Comment2Id) REFERENCES Message (id)
                            LABEL replyOf_Comment,
    Comment_replyOf_Post    SOURCE KEY (CommentId) REFERENCES Message (id)
                            DESTINATION KEY (PostId) REFERENCES Message (id)
                            LABEL replyOf_Post,
    Forum_containerOf_Post  SOURCE KEY (ForumId) REFERENCES Forum (id)
                            DESTINATION KEY (PostId) REFERENCES Message (id)
                            LABEL containerOf,
    Forum_hasMember_Person  SOURCE KEY (ForumId) REFERENCES Forum (id)
                            DESTINATION KEY (PersonId) REFERENCES Person (id)
                            LABEL hasMember,
    Forum_hasModerator_Person   SOURCE KEY (ForumId) REFERENCES Forum (id)
                            DESTINATION KEY (PersonId) REFERENCES Person (id)
                            LABEL hasModerator,
    Forum_hasTag_Tag        SOURCE KEY (ForumId) REFERENCES Forum (id)
                            DESTINATION KEY (TagId) REFERENCES Tag (id)
                            LABEL Forum_hasTag,
    Organisation_isLocatedIn_Place  SOURCE KEY (OrganisationId) REFERENCES Organisation (id)
                            DESTINATION KEY (PlaceId) REFERENCES Place (id)
                            LABEL Organisation_isLocatedIn,
    Person_hasInterest_Tag  SOURCE KEY (PersonId) REFERENCES Person (id)
                            DESTINATION KEY (interestId) REFERENCES Tag (id)
                            LABEL hasInterest,
    Person_isLocatedIn_City     SOURCE KEY (PersonId) REFERENCES Person (id)
                            DESTINATION KEY (CityId) REFERENCES Place (id)
                            LABEL Person_isLocatedIn,
    Person_knows_person     SOURCE KEY (Person1Id) REFERENCES Person (id)
                            DESTINATION KEY (Person2Id) REFERENCES Person (id)
                            LABEL Knows,
    Person_likes_Comment    SOURCE KEY (PersonId) REFERENCES Person (id)
                            DESTINATION KEY (CommentId) REFERENCES Message (id)
                            LABEL likes_Comment,
    Person_likes_Post       SOURCE KEY (PersonId) REFERENCES Person (id)
                            DESTINATION KEY (PostId) REFERENCES Message (id)
                            LABEL likes_Post,
    Person_studyAt_University   SOURCE KEY (PersonId) REFERENCES Person (id)
                            DESTINATION KEY (UniversityId) REFERENCES Organisation (id)
                            LABEL studyAt,
    Person_workAt_Company   SOURCE KEY (PersonId) REFERENCES Person (id)
                            DESTINATION KEY (CompanyId) REFERENCES Organisation (id)
                            LABEL workAt,
    Place_isPartOf_Place    SOURCE KEY (Place1Id) REFERENCES Place (id)
                            DESTINATION KEY (Place2Id) REFERENCES Place (id)
                            LABEL isPartOf,
    Post_hasCreator_Person  SOURCE KEY (PostId) REFERENCES Message (id)
                            DESTINATION KEY (PersonId) REFERENCES Person (id)
                            LABEL Post_hasCreator,
    Message_hasCreator_Person   SOURCE KEY (MessageId) REFERENCES Message (id)
                            DESTINATION KEY (PersonId) REFERENCES Person (id)
                            LABEL Message_hasCreator,
    Message_hasTag_Tag      SOURCE KEY (MessageId) REFERENCES Message (id)
                            DESTINATION KEY (TagId) REFERENCES Tag (id)
                            LABEL Message_hasTag,
    Message_isLocatedIn_Country SOURCE KEY (MessageId) REFERENCES Message (id)
                            DESTINATION KEY (CountryId) REFERENCES Place (id)
                            LABEL Message_isLocatedIn,
    Message_replyOf_Message SOURCE KEY (Comment1Id) REFERENCES Message (id)
                            DESTINATION KEY (Comment2Id) REFERENCES Message (id)
                            LABEL Message_replyOf,
    Post_hasTag_Tag         SOURCE KEY (PostId) REFERENCES Message (id)
                            DESTINATION KEY (TagId) REFERENCES Tag (id)
                            LABEL Post_hasTag,
    Post_isLocatedIn_Country    SOURCE KEY (PostId) REFERENCES Message (id)
                            DESTINATION KEY (CountryId) REFERENCES Place (id)
                            LABEL Post_isLocatedIn,
    Tag_hasType_TagClass    SOURCE KEY (TagId) REFERENCES Tag (id)
                            DESTINATION KEY (TagClassId) REFERENCES TagClass (id)
                            LABEL hasType,
    TagClass_isSubClassOf_TagClass  SOURCE KEY (TagClass1Id) REFERENCES TagClass (id)
                            DESTINATION KEY (TagClass2Id) REFERENCES TagClass (id)
                            LABEL isSubClassOf
    );

query IIIIII
-FROM GRAPH_TABLE (snb_projected
    MATCH (replyAuthor:person)<-[chc:Comment_hasCreator]-(c:comment)-[r:message_replyOf]->(m:message where m.id = 2199023255990)-[au:message_hasCreator]->(messageAuthor:person),
(replyAuthor:person)-[k:knows]->?(messageAuthor:person)
    COLUMNS (c.id,c.content,c.creationDate, replyAuthor.id, replyAuthor.firstName, replyAuthor.lastName))
    ORDER BY content;
----