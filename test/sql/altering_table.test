# name: test/sql/altering_table.test
# description: Testing altering a table after creating a property graph over it
# group: [sql]

#statement ok
#pragma enable_verification

require duckpgq

statement ok
CREATE TABLE Student(id BIGINT, name VARCHAR);

statement ok
CREATE TABLE know(src BIGINT, dst BIGINT, createDate BIGINT);

statement ok
CREATE TABLE School(name VARCHAR, Id BIGINT, Kind VARCHAR);

statement ok
CREATE TABLE StudyAt(personId BIGINT, schoolId BIGINT);

statement ok
INSERT INTO Student VALUES (0, 'Daniel'), (1, 'Tavneet'), (2, 'Gabor'), (3, 'Peter'), (4, 'David');

statement ok
INSERT INTO know VALUES (0,1, 10), (0,2, 11), (0,3, 12), (3,0, 13), (1,2, 14), (1,3, 15), (2,3, 16), (4,3, 17);

statement ok
INSERT INTO School VALUES ('VU', 0, 'University'), ('UVA', 1, 'University');

statement ok
INSERT INTO StudyAt VALUES (0, 0), (1, 0), (2, 1), (3, 1), (4, 1);

statement ok
-CREATE PROPERTY GRAPH pg
VERTEX TABLES (
    Student PROPERTIES ( id, name ) LABEL Person,
    School LABEL SCHOOL
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            LABEL Knows,
    studyAt SOURCE KEY ( personId ) REFERENCES Student ( id )
            DESTINATION KEY ( SchoolId ) REFERENCES School ( id )
            LABEL StudyAt
    );

statement ok
-FROM GRAPH_TABLE (pg
    MATCH
    (a:Person)-[s:StudyAt]->(b:School)
    WHERE a.name = 'Daniel'
    COLUMNS (a.id)
    ) study;

statement ok
ALTER TABLE student RENAME id TO jd;

statement error
-FROM GRAPH_TABLE (pg
    MATCH
    (a:Person)-[s:StudyAt]->(b:School)
    WHERE a.name = 'Daniel'
    COLUMNS (a.jd)
    ) study;
----
