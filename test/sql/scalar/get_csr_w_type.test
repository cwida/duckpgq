# name: test/sql/scalar/get_csr_w_type.test
# description: Testing getting the CSR W type UDF
# group: [scalar]

require duckpgq

statement ok
CREATE TABLE Student(id BIGINT, name VARCHAR);

statement ok
CREATE TABLE know(src BIGINT, dst BIGINT, id BIGINT);

statement ok
CREATE TABLE School(school_name VARCHAR, school_id BIGINT, school_kind BIGINT);

statement ok
INSERT INTO Student VALUES (0, 'Daniel'), (1, 'Tavneet'), (2, 'Gabor'), (3, 'Peter'), (4, 'David');

statement ok
INSERT INTO know VALUES (0,1, 10), (0,2, 11), (0,3, 12), (3,0, 13), (1,2, 14), (1,3, 15), (2,3, 16), (4,3, 17), (2, 4, 18);

statement ok
-CREATE PROPERTY GRAPH pg
VERTEX TABLES (
    Student PROPERTIES ( id, name ) LABEL Person
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
            PROPERTIES ( id ) LABEL Knows
    );

statement ok
SELECT  CREATE_CSR_EDGE(
            0,
            (SELECT count(a.id) FROM Student a),
            CAST (
                (SELECT sum(CREATE_CSR_VERTEX(
                            0,
                            (SELECT count(a.id) FROM Student a),
                            sub.dense_id,
                            sub.cnt)
                            )
                FROM (
                    SELECT a.rowid as dense_id, count(k.src) as cnt
                    FROM Student a
                    LEFT JOIN Know k ON k.src = a.id
                    GROUP BY a.rowid) sub
                )
            AS BIGINT),
            (select count() FROM Know k JOIN student a on a.id = k.src JOIN student c on c.id = k.dst),
            a.rowid,
            c.rowid,
            k.rowid) as temp
    FROM Know k
    JOIN student a on a.id = k.src
    JOIN student c on c.id = k.dst;

statement ok
SELECT  CREATE_CSR_EDGE(
            1,
            (SELECT count(a.id) FROM Student a),
            CAST (
                (SELECT sum(CREATE_CSR_VERTEX(
                            1,
                            (SELECT count(a.id) FROM Student a),
                            sub.dense_id,
                            sub.cnt)
                            )
                FROM (
                    SELECT a.rowid as dense_id, count(k.src) as cnt
                    FROM Student a
                    LEFT JOIN Know k ON k.src = a.id
                    GROUP BY a.rowid) sub
                )
            AS BIGINT),
            (select count() FROM Know k JOIN student a on a.id = k.src JOIN student c on c.id = k.dst),
            a.rowid,
            c.rowid,
            k.rowid) as temp
    FROM Know k
    JOIN student a on a.id = k.src
    JOIN student c on c.id = k.dst;

query I
SELECT csr_get_w_type(0);
----
0

statement ok
SELECT  CREATE_CSR_EDGE(
            1,
            (SELECT count(a.id) FROM Student a),
            CAST (
                (SELECT sum(CREATE_CSR_VERTEX(
                            1,
                            (SELECT count(a.id) FROM Student a),
                            sub.dense_id,
                            sub.cnt)
                            )
                FROM (
                    SELECT a.rowid as dense_id, count(k.src) as cnt
                    FROM Student a
                    LEFT JOIN Know k ON k.src = a.id
                    GROUP BY a.rowid) sub
                )
            AS BIGINT),
            (select count() FROM Know k JOIN student a on a.id = k.src JOIN student c on c.id = k.dst),
            a.rowid,
            c.rowid,
            k.rowid, 12) as temp
    FROM Know k
    JOIN student a on a.id = k.src
    JOIN student c on c.id = k.dst;

query I
SELECT csr_get_w_type(1);
----
1

statement ok
SELECT  CREATE_CSR_EDGE(
            2,
            (SELECT count(a.id) FROM Student a),
            CAST (
                (SELECT sum(CREATE_CSR_VERTEX(
                            2,
                            (SELECT count(a.id) FROM Student a),
                            sub.dense_id,
                            sub.cnt)
                            )
                FROM (
                    SELECT a.rowid as dense_id, count(k.src) as cnt
                    FROM Student a
                    LEFT JOIN Know k ON k.src = a.id
                    GROUP BY a.rowid) sub
                )
            AS BIGINT),
            (select count() FROM Know k JOIN student a on a.id = k.src JOIN student c on c.id = k.dst),
            a.rowid,
            c.rowid,
            k.rowid, 1.2) as temp
    FROM Know k
    JOIN student a on a.id = k.src
    JOIN student c on c.id = k.dst;

query I
SELECT csr_get_w_type(2);
----
2

statement error
SELECT csr_get_w_type(3);
----

