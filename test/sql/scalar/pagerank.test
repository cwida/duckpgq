# name: test/sql/scalar/pagerank.test
# description: Testing the pagerank implementation
# group: [scalar]

require duckpgq

statement ok
CREATE TABLE Student(id BIGINT, name VARCHAR);INSERT INTO Student VALUES (0, 'Daniel'), (1, 'Tavneet'), (2, 'Gabor'), (3, 'Peter'), (4, 'David');

statement ok
CREATE TABLE know(src BIGINT, dst BIGINT, createDate BIGINT);INSERT INTO know VALUES (0,1, 10), (0,2, 11), (0,3, 12), (3,0, 13), (1,2, 14), (1,3, 15), (2,3, 16), (4,3, 17);

statement ok
-CREATE PROPERTY GRAPH pg
VERTEX TABLES (
    Student
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
    );

query II
select id, pagerank from pagerank(pg, student, know);
----
0	0.30722555839452875
1	0.11534940106637968
2	0.16437299553018173
3	0.32814638463154105
4	0.028301886792456276


statement ok
CREATE OR REPLACE TABLE Student (
    id BIGINT
);

statement ok
INSERT INTO Student (id) VALUES
(0),
(1),
(2),
(3),
(4);

statement ok
CREATE OR REPLACE TABLE know (
    src BIGINT,
    dst BIGINT,
    edge BIGINT
);

statement ok
INSERT INTO know (src, dst, edge) VALUES
(2, 1, 4),
(3, 1, 5),
(3, 2, 6),
(1, 2, 4),
(1, 0, 0),
(2, 0, 1),
(3, 0, 2),
(0, 1, 0),
(4, 3, 7),
(0, 3, 3),
(1, 3, 5),
(2, 3, 6),
(3, 4, 7),
(0, 2, 1);

statement ok
-CREATE OR REPLACE PROPERTY GRAPH pg
VERTEX TABLES (
    Student
    )
EDGE TABLES (
    know    SOURCE KEY ( src ) REFERENCES Student ( id )
            DESTINATION KEY ( dst ) REFERENCES Student ( id )
    );

query II
select id, pagerank from pagerank(pg, student, know);
----
0	0.19672392385442233
1	0.19672392385442233
2	0.19672392385442233
3	0.26797750004549203
4	0.08524695480585476