# name: test/sql/create_pg/create_pg_with_pk_fk.test
# description: Testing create with predefined primary and foreign keys
# group: [create_pg]

require duckpgq

statement ok
create table v (
    id BIGINT primary key,
    name varchar
);

statement ok
INSERT INTO v VALUES (1, 'a');

statement ok
create table e (
    id bigint primary key,
    src BIGINT REFERENCES v(id),
    dst BIGINT REFERENCES v(id)
);

statement error
-create property graph g
vertex tables (v)
edge tables (e source v destination v);
----
Invalid Error: Multiple primary key - foreign key relationships detected between e and v. Please explicitly define the primary key and foreign key columns using `SOURCE KEY <primary key> REFERENCES v <foreign key>`

statement ok
create table w (
    id BIGINT primary key,
    name varchar
);

statement ok
INSERT INTO w VALUES (2, 'b');

statement ok
create table e2 (
    id bigint primary key,
    src BIGINT REFERENCES v(id),
    dst BIGINT REFERENCES w(id)
);

statement ok
INSERT INTO e2 VALUES (1, 1, 2);

statement error
-create property graph g
vertex tables (v)
edge tables (e2 source v destination w);
----
Invalid Error: Table 'w' not found in the property graph g.

statement ok
-create property graph g
vertex tables (v, w)
edge tables (e2 source v destination w);

query II
-FROM GRAPH_TABLE (g MATCH (v:v)-[e2:e2]->(w:w) COLUMNS (v.id, w.id));
----
1	2

statement ok
CREATE TABLE a (
    id BIGINT,
    name VARCHAR
);

statement error
CREATE TABLE b (
    name VARCHAR,
    src BIGINT REFERENCES a(id),
    dst BIGINT,
);
----
Binder Error: Failed to create foreign key: there is no primary key or unique constraint for referenced table "a"

statement ok
CREATE TABLE b (
    name VARCHAR,
    src BIGINT,
    dst BIGINT,
);

statement error
-CREATE PROPERTY GRAPH g2 VERTEX TABLES (a) EDGE TABLES (b SOURCE a DESTINATION a);
----
Invalid Error: No primary key - foreign key relationship found in b with SOURCE table a

statement ok
CREATE TABLE a_pk (
    id BIGINT primary key,
    name VARCHAR
);

statement ok
CREATE TABLE b_pk (
    name VARCHAR,
    src BIGINT REFERENCES a_pk(id),
    dst BIGINT,
);

statement ok
-CREATE PROPERTY GRAPH g2 VERTEX TABLES (a_pk) EDGE TABLES (b_pk SOURCE a_pk DESTINATION a_pk);

statement ok
CREATE TABLE x (
    id BIGINT PRIMARY KEY,
    name VARCHAR
);

statement ok
CREATE TABLE y (
    id BIGINT PRIMARY KEY,
    src BIGINT REFERENCES x(id),
    dst BIGINT REFERENCES x(id)
);

statement error
-CREATE PROPERTY GRAPH g3
VERTEX TABLES (x)
EDGE TABLES (y SOURCE x DESTINATION x);
----
Invalid Error: Multiple primary key - foreign key relationships detected between y and x. Please explicitly define the primary key and foreign key columns using `SOURCE KEY <primary key> REFERENCES x <foreign key>`

statement error
-CREATE PROPERTY GRAPH g3
VERTEX TABLES (x)
EDGE TABLES (y SOURCE KEY (src) REFERENCES x (id) DESTINATION x);
----
Invalid Error: Multiple primary key - foreign key relationships detected between y and x. Please explicitly define the primary key and foreign key columns using `DESTINATION KEY <primary key> REFERENCES x <foreign key>`

statement ok
-CREATE PROPERTY GRAPH g3_explicit
VERTEX TABLES (x)
EDGE TABLES (y SOURCE KEY (src) REFERENCES x (id)
                             DESTINATION KEY (dst) REFERENCES x (id));

query I
-FROM GRAPH_TABLE (g3_explicit MATCH (x:x)-[y:y]->(x:x) COLUMNS (x.id));
----

statement ok
CREATE TABLE m (
    id BIGINT PRIMARY KEY,
    name VARCHAR
);

statement ok
CREATE TABLE n (
    id BIGINT PRIMARY KEY,
    src BIGINT,
    dst BIGINT
);

statement error
-CREATE PROPERTY GRAPH g4
VERTEX TABLES (m)
EDGE TABLES (n SOURCE m DESTINATION m);
----
Invalid Error: The primary key for the SOURCE table m is not defined in the edge table n

statement error
-CREATE PROPERTY GRAPH g4
VERTEX TABLES (m)
EDGE TABLES (n SOURCE KEY (src) REFERENCES m DESTINATION m);
----
Parser Error: syntax error at or near "DESTINATION"

statement ok
CREATE TABLE p (
    id BIGINT PRIMARY KEY,
    name VARCHAR
);

statement ok
CREATE TABLE q (
    id BIGINT PRIMARY KEY,
    src BIGINT,
    dst BIGINT REFERENCES p(id)
);

statement error
CREATE PROPERTY GRAPH g5
VERTEX TABLES (p)
EDGE TABLES (q DESTINATION p);
----
Parser Error: syntax error at or near "DESTINATION"

statement ok
CREATE TABLE u (
    id BIGINT PRIMARY KEY,
    name VARCHAR
);

statement ok
CREATE TABLE v2 (
    id BIGINT PRIMARY KEY,
    src BIGINT REFERENCES u(id),
    dst BIGINT
);

statement ok
CREATE TABLE w2 (
    id BIGINT PRIMARY KEY,
    src BIGINT,
    dst BIGINT REFERENCES u(id)
);

statement error
CREATE PROPERTY GRAPH g6
VERTEX TABLES (u)
EDGE TABLES (v2 SOURCE u, w2 DESTINATION u);
----
Parser Error: syntax error at or near ","

statement ok
CREATE TABLE vertex_b (
    id BIGINT PRIMARY KEY,
    name VARCHAR
);

statement ok
-CREATE PROPERTY GRAPH g11
VERTEX TABLES (vertex_b);

statement ok
CREATE TABLE node_a (
    id BIGINT PRIMARY KEY,
    name VARCHAR
);

statement ok
CREATE TABLE edge_a (
    src BIGINT REFERENCES node_a(id),
    dst BIGINT REFERENCES node_a(id)
);

statement error
-CREATE PROPERTY GRAPH g10
VERTEX TABLES (node_a)
EDGE TABLES (edge_a);
----
Parser Error: syntax error at or near ")"

statement error
-CREATE PROPERTY GRAPH g10
VERTEX TABLES (node_a)
EDGE TABLES (edge_a SOURCE node_a DESTINATION KEY (dst) REFERENCES node_a (id));
----
Invalid Error: Multiple primary key - foreign key relationships detected between edge_a and node_a. Please explicitly define the primary key and foreign key columns using `SOURCE KEY <primary key> REFERENCES node_a <foreign key>`

statement ok
-CREATE PROPERTY GRAPH g10
VERTEX TABLES (node_a)
EDGE TABLES (edge_a SOURCE KEY (src) REFERENCES node_a (id) DESTINATION KEY (dst) REFERENCES node_a (id));

statement ok
CREATE OR REPLACE TABLE a (
    id BIGINT PRIMARY KEY,
    name VARCHAR
);

statement ok
CREATE OR REPLACE TABLE b (
    id BIGINT PRIMARY KEY,
    description VARCHAR
);

statement ok
CREATE TABLE edge_ab (
    id BIGINT PRIMARY KEY,
    src BIGINT REFERENCES a(id),
    dst BIGINT REFERENCES b(id)
);

statement ok
-CREATE PROPERTY GRAPH g_relationship
VERTEX TABLES (a, b)
EDGE TABLES (edge_ab SOURCE a DESTINATION b);

statement ok
INSERT INTO a VALUES (1, 'Vertex A');

statement ok
INSERT INTO b VALUES (2, 'Vertex B');

statement ok
INSERT INTO edge_ab VALUES (1, 1, 2);

query II
-FROM GRAPH_TABLE (g_relationship MATCH (a:a)-[edge_ab:edge_ab]->(b:b) COLUMNS (a.id, b.id));
----
1	2